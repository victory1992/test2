package com.dingapp.biz.page.fourpage;import java.util.HashMap;import org.json.JSONException;import org.json.JSONObject;import android.app.Dialog;import android.graphics.Bitmap;import android.graphics.Bitmap.CompressFormat;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.support.annotation.Nullable;import android.text.TextUtils;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.Window;import android.view.View.OnClickListener;import android.view.WindowManager.LayoutParams;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.android.volley.Response.Listener;import com.dingapp.andriod.z20.R;import com.dingapp.biz.AppConstants;import com.dingapp.biz.db.orm.DistrubuteIndomeBean;import com.dingapp.biz.net.RequestDataUtil;import com.dingapp.biz.page.customview.MagicTextView;import com.dingapp.biz.pay.weixin.WxConstants;import com.dingapp.biz.util.ImageUtils;import com.dingapp.biz.util.LogoutUtils;import com.dingapp.core.app.BaseFragment;import com.dingapp.core.util.UIUtil;import com.google.gson.Gson;import com.tencent.mm.sdk.modelmsg.SendMessageToWX;import com.tencent.mm.sdk.modelmsg.WXMediaMessage;import com.tencent.mm.sdk.modelmsg.WXWebpageObject;import com.tencent.mm.sdk.openapi.IWXAPI;import com.tencent.mm.sdk.openapi.WXAPIFactory;public class DistributionHomeFragment extends BaseFragment implements		OnClickListener {	private MagicTextView tv_total_money;	private MagicTextView tv_yue;	private TextView tv_getmoney;	private TextView tv_isvis_get;	private Double money_limit = 0.0;	private LinearLayout ll_dis_orders;	private LinearLayout ll_myteam;	private LinearLayout ll_ranking;	private LinearLayout ll_recommand;	private TextView tv_dis_ordernum;	private DistrubuteIndomeBean distreubuteBean;	private boolean isCanGetmoney = false;	private ImageView iv_back;	private ImageView img_share_wx;	private ImageView img_shar_friend;	private TextView cancle_share;	private Dialog dialog;	private ImageView iv_share;	/**	 * 微信分享	 */	private IWXAPI wxApi;	/**	 * 分享url，需要载url之后追加分享会员的会员ID。例如:http://xx.xx.xx?prd_id=xx&user_id=1	 */	private String share_url;	private Listener<String> distributeListener = new Listener<String>() {		@Override		public void onResponse(String response) {			parserDistributeData(response);		}	};	@Override	public View onCreateView(LayoutInflater inflater,			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {		return inflater.inflate(R.layout.dis_home, null);	}	@Override	public void onActivityCreated(Bundle savedInstanceState) {		super.onActivityCreated(savedInstanceState);		wxApi = WXAPIFactory.createWXAPI(getActivity(), WxConstants.WX_APP_ID,				true);		wxApi.registerApp(WxConstants.WX_APP_ID);		initView(getView());		initListener();		requestData();	}	@Override	public void onHiddenChanged(boolean hidden) {		super.onHiddenChanged(hidden);		if (!hidden) {			// requestData();		}	}	private void initView(View view) {		tv_total_money = (MagicTextView) getView().findViewById(				R.id.tv_hasmoney_total);		tv_yue = (MagicTextView) getView().findViewById(R.id.tv_hasmoney_yue);		tv_getmoney = (TextView) getView().findViewById(				R.id.tv_hasmoney_getmoney);		tv_isvis_get = (TextView) getView().findViewById(				R.id.tv_hasmoney_avi_get);		ll_dis_orders = (LinearLayout) view.findViewById(R.id.ll_dis_order);		ll_myteam = (LinearLayout) view.findViewById(R.id.ll_dis_myteam);		ll_ranking = (LinearLayout) view.findViewById(R.id.ll_dis_ranking);		ll_recommand = (LinearLayout) view.findViewById(R.id.ll_dis_recommand);		tv_dis_ordernum = (TextView) view.findViewById(R.id.tv_dis_ordernums);		iv_back = (ImageView) view.findViewById(R.id.iv_dis_back);		iv_share = new ImageView(getActivity());		iv_share.setImageResource(R.drawable.share_logo);	}	private void initListener() {		tv_getmoney.setOnClickListener(this);		ll_dis_orders.setOnClickListener(this);		ll_myteam.setOnClickListener(this);		ll_ranking.setOnClickListener(this);		ll_recommand.setOnClickListener(this);		iv_back.setOnClickListener(this);	}	@Override	public void onClick(View v) {		if (v == iv_back) {			popBack(null);			return;		}		if (v == tv_getmoney) {			if (AppConstants.member.getSessionId() == null					|| TextUtils.isEmpty(AppConstants.member.getSessionId())) {				openPage("login_page", null, false);				return;			}			Bundle bundle = new Bundle();			bundle.putString(AppConstants.KEY, tv_yue.getText().toString());			bundle.putDouble("money_limit", money_limit);			bundle.putBoolean("isCanGetmoney", isCanGetmoney);			openPage("getmoney", bundle, true);			return;		}		if (v == ll_dis_orders) {			openPage("dis_orderlist", null, true);			return;		}		if (v == ll_myteam) {			openPage("my_team", null, true);			return;		}		if (v == ll_ranking) {			openPage("ranking_list", null, true);			return;		}		if (v == ll_recommand) {			share();			return;		} else if (v == img_share_wx) {			dialog.dismiss();			share(1);			return;		} else if (v == img_shar_friend) {			dialog.dismiss();			share(2);			return;		} else if (v == cancle_share) {			dialog.dismiss();			return;		}	}	// 请求分销中心数据	private void requestData() {		HashMap<String, String> postMap = new HashMap<String, String>();		postMap.put("member_id", AppConstants.member.getMemberId() + "");		RequestDataUtil.getRequestInstance().requestData(distributeListener,				postMap, AppConstants.distributor_info, getActivity(), null,				"true");	}	// 解析返回数据	private void parserDistributeData(String json) {		try {			JSONObject jsbJson = new JSONObject(json);			String statusCode = jsbJson.getString("statusCode");			String statusMsg = jsbJson.getString("statusMsg");			Gson gson = new Gson();			if (statusCode.equals("200")) {				String dataJson = jsbJson.getString("data");				distreubuteBean = gson.fromJson(dataJson,						DistrubuteIndomeBean.class);				initData();			} else if (TextUtils.equals(statusCode, "1001")) {				UIUtil.showToast(getActivity(), "身份登录信息失效");				LogoutUtils.logout(getActivity());			} else {				UIUtil.showToast(getActivity(), "未知错误" + statusMsg);			}		} catch (JSONException e) {			e.printStackTrace();		}	}	private void initData() {		if (distreubuteBean == null) {			return;		}		share_url = distreubuteBean.getShare_url();		try {			Double total = Double.parseDouble(tv_total_money.getText()					.toString().replace("元", ""));			Double yue = Double.parseDouble(tv_yue.getText().toString());			Double addValue = 0.0;			if (distreubuteBean.getAvailable_money() - yue < 0) {				addValue = yue - distreubuteBean.getAvailable_money();			} else {				addValue = distreubuteBean.getAvailable_money() - yue;			}			if (distreubuteBean.getAvailable_money() < 1 || addValue < 0.9) {				tv_yue.setText(distreubuteBean.getAvailable_money() + "");			} else {				tv_yue.startScroll("", distreubuteBean.getAvailable_money(), "");			}			if (distreubuteBean.getTotal_money() - total < 0) {				addValue = total - distreubuteBean.getTotal_money();			} else {				addValue = distreubuteBean.getTotal_money() - total;			}			if (distreubuteBean.getTotal_money() < 1 || addValue < 0.9) {				tv_total_money.setText(distreubuteBean.getTotal_money() + "元");			} else {				tv_total_money.startScroll("",						distreubuteBean.getTotal_money(), "元");			}		} catch (Exception e) {			tv_yue.setText(distreubuteBean.getAvailable_money() + "");			tv_total_money.setText(distreubuteBean.getTotal_money() + "元");		}		money_limit = distreubuteBean.getMoney_limit();		if (distreubuteBean.getCan_raise_cash().equals("false")) {			isCanGetmoney = false;		} else {			isCanGetmoney = true;		}		tv_dis_ordernum.setText(distreubuteBean.getOrder_cnt() + "");		tv_isvis_get.setText("满" + money_limit + "元可提现");	}	/**	 * 分享页面	 */	@SuppressWarnings("deprecation")	private void share() {		if (dialog == null) {			dialog = new Dialog(getActivity(), R.style.dialog_style);			View view = View					.inflate(getActivity(), R.layout.share_dialog, null);			img_share_wx = (ImageView) view.findViewById(R.id.img_share_wx);			img_shar_friend = (ImageView) view					.findViewById(R.id.img_share_wx_friend);			cancle_share = (TextView) view.findViewById(R.id.cancle_share);			img_share_wx.setOnClickListener(this);			img_shar_friend.setOnClickListener(this);			cancle_share.setOnClickListener(this);			dialog.setContentView(view);			Window window = dialog.getWindow();			window.setBackgroundDrawable(new BitmapDrawable());			window.setGravity(Gravity.BOTTOM);			LayoutParams params = window.getAttributes();			params.height = android.view.ViewGroup.LayoutParams.WRAP_CONTENT;			params.width = android.view.ViewGroup.LayoutParams.MATCH_PARENT;		}		dialog.show();	}	/**	 * 微信分享	 * 	 * @param type	 *            1为分享到好友，2为分享到朋友圈	 */	private void share(final int type) {		boolean isInstalled = wxApi.isWXAppInstalled();		if (!isInstalled) {			UIUtil.showToast(getActivity(), "未安装微信");			return;		}		try {			new Thread() {				@Override				public void run() {					super.run();					WXWebpageObject webpage = new WXWebpageObject();					if (share_url == null || TextUtils.isEmpty(share_url)) {						return;					}					webpage.webpageUrl = share_url;					WXMediaMessage msg = new WXMediaMessage(webpage);					msg.title = "汉固达";					msg.description = "推荐好友可以帮你赚钱了";					BitmapDrawable d = (BitmapDrawable) iv_share.getDrawable();					Bitmap bmp = d.getBitmap();					msg.thumbData = ImageUtils.getCompressBitmap(bmp,							CompressFormat.JPEG); // 设置图片数据;					SendMessageToWX.Req req = new SendMessageToWX.Req();					req.transaction = String							.valueOf(System.currentTimeMillis());					req.message = msg;					if (type == 1) {						req.scene = SendMessageToWX.Req.WXSceneSession;					} else {						req.scene = SendMessageToWX.Req.WXSceneTimeline;					}					wxApi.sendReq(req);				}			}.start();		} catch (Exception e) {		}	}}