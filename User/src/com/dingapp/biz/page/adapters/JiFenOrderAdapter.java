package com.dingapp.biz.page.adapters;import java.util.ArrayList;import java.util.List;import android.content.Context;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.dingapp.andriod.z20.R;import com.dingapp.biz.db.orm.ItemJifenOrderBean;import com.dingapp.biz.db.orm.OrderPrdAttrsBean;import com.dingapp.biz.db.orm.OrederGoodsItemBean;import com.dingapp.biz.util.ImageViewHWutils;import com.dingapp.core.app.BaseFragment;import com.dingapp.imageloader.core.ImageLoader;public class JiFenOrderAdapter extends BaseAdapter {	private Context context;	private OrderItemClick click;	private List<ItemJifenOrderBean> list = new ArrayList<ItemJifenOrderBean>();	private BaseFragment mfragment;	public JiFenOrderAdapter(Context context, OrderItemClick click,			BaseFragment mfragment) {		this.context = context;		this.click = click;		this.mfragment = mfragment;	}	public void setList(List<ItemJifenOrderBean> list2) {		if (list2 != null) {			list.clear();			list.addAll(list2);			notifyDataSetChanged();		}	}	@Override	public int getCount() {		return list.size();	}	@Override	public Object getItem(int arg0) {		return list.get(arg0);	}	@Override	public long getItemId(int arg0) {		return arg0;	}	@Override	public View getView(int position, View convertView, ViewGroup arg2) {		ViewHolder holder = null;		if (convertView == null) {			holder = new ViewHolder();			convertView = LayoutInflater.from(context).inflate(					R.layout.jifen_order_item, null);			holder.rl_pay = (LinearLayout) convertView					.findViewById(R.id.rl_jifen_pay);			holder.tv_pay_status1 = (TextView) convertView					.findViewById(R.id.tv_jifen_status2);			holder.tv_pay_status2 = (TextView) convertView					.findViewById(R.id.tv_jifen_status1);			holder.tv_order_num = (TextView) convertView					.findViewById(R.id.jifen_order_num);			holder.tv_order_status = (TextView) convertView					.findViewById(R.id.tv_jifen_status);			holder.ll_parent = (LinearLayout) convertView					.findViewById(R.id.ll_parent);			holder.iv_pic = (ImageView) convertView					.findViewById(R.id.iv_item_carts_jifen);			holder.tv_title = (TextView) convertView					.findViewById(R.id.tv_item_carts_title_jifen);			holder.tv_guige = (TextView) convertView					.findViewById(R.id.tv_item_carts_guige_jifen);			holder.tv_price = (TextView) convertView					.findViewById(R.id.tv_item_carts_price_jifen);			holder.tv_num = (TextView) convertView					.findViewById(R.id.tv_goods_num_jifen);			convertView.setTag(holder);		} else {			holder = (ViewHolder) convertView.getTag();		}		ItemJifenOrderBean bean = (ItemJifenOrderBean) getItem(position);		if (bean != null) {			holder.tv_order_num.setText("订单编号: " + bean.getOrder_no());			OrederGoodsItemBean goodsBean = bean.getGoods_list().get(0);			if (goodsBean.getGoods_pic() != null) {				ImageLoader.getInstance().displayImage(						goodsBean.getGoods_pic().getDetail_url()								+ ImageViewHWutils.getWHImageVIew(250, 250),						holder.iv_pic);			}			holder.tv_title.setText(goodsBean.getGoods_name());			holder.tv_price.setText(goodsBean.getGoods_score() + "");			List<OrderPrdAttrsBean> attrList = goodsBean.getGoods_attrs();			if (attrList != null) {				StringBuilder sb = new StringBuilder();				for (int i = 0; i < attrList.size(); i++) {					String name = attrList.get(i).getAttr_name();					String value = attrList.get(i).getAttr_value();					sb.append(name + ":" + value);				}				holder.tv_guige.setText(sb.toString());			}			holder.tv_num.setText("x" + goodsBean.getGoods_cnt());			// 订单状态判断，区别设计师订单和分销订单			String order_status = bean.getStatus();			holder.rl_pay.setVisibility(View.GONE);			holder.tv_pay_status1.setVisibility(View.GONE);			if (order_status.equals("shipping")) {				holder.tv_order_status.setText("待发货");			}			if (order_status.equals("paying")) {				holder.tv_order_status.setText("待付款");				holder.tv_pay_status1.setText("取消订单");				holder.tv_pay_status1.setVisibility(View.VISIBLE);				holder.tv_pay_status2.setText("去支付");				holder.rl_pay.setVisibility(View.VISIBLE);			}			if (order_status.equals("receipting")) {				holder.tv_order_status.setText("待收货");				holder.tv_pay_status2.setText("确定收货");				holder.rl_pay.setVisibility(View.VISIBLE);				holder.tv_pay_status2.setVisibility(View.VISIBLE);			}			if (order_status.equals("finished")) {				holder.tv_order_status.setText("已完成");			}			if (order_status.equals("cancelled")) {				holder.tv_order_status.setText("已取消");			}			if (order_status.equals("withdraw")) {				holder.tv_order_status.setText("交易完成");			}		}		holder.itemPosition = position;		initAdapterListener(holder);		return convertView;	}	private void initAdapterListener(ViewHolder holder) {		holder.ll_parent.setTag(holder);		holder.ll_parent.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				int itemPosition = -1;				Object tag = v.getTag();				if (tag instanceof ViewHolder) {					itemPosition = ((ViewHolder) tag).itemPosition;				}				if (itemPosition == -1) {					return;				}				Bundle bundle = new Bundle();				ItemJifenOrderBean bean = (ItemJifenOrderBean) getItem(itemPosition);				bundle.putString("order_id", bean.getOrder_id() + "");				mfragment.openPage("jifen_orderdetail", bundle, true);			}		});		holder.tv_pay_status1.setTag(holder);		holder.tv_pay_status1.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				int itemPosition = -1;				Object tag = v.getTag();				if (tag instanceof ViewHolder) {					itemPosition = ((ViewHolder) tag).itemPosition;				}				if (itemPosition == -1) {					return;				}				Bundle bundle = new Bundle();				ItemJifenOrderBean bean = (ItemJifenOrderBean) getItem(itemPosition);				bundle.putInt("order_id", bean.getOrder_id());				bundle.putString("order_status", bean.getStatus());				bundle.putString("return_status", bean.getReturn_status());				bundle.putString("isCancal", "true");				click.setOnclick(bundle, bean);			}		});		holder.tv_pay_status2.setTag(holder);		holder.tv_pay_status2.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				int itemPosition = -1;				Object tag = v.getTag();				if (tag instanceof ViewHolder) {					itemPosition = ((ViewHolder) tag).itemPosition;				}				if (itemPosition == -1) {					return;				}				Bundle bundle = new Bundle();				ItemJifenOrderBean bean = (ItemJifenOrderBean) getItem(itemPosition);				bundle.putInt("order_id", bean.getOrder_id());				bundle.putString("order_status", bean.getStatus());				bundle.putString("price", bean.getPay_price() + "");				bundle.putString("isCancal", "false");				click.setOnclick(bundle, bean);			}		});	}	public interface OrderItemClick {		public abstract void setOnclick(Bundle bundle, ItemJifenOrderBean bean);	}	class ViewHolder {		private LinearLayout rl_pay;		private TextView tv_pay_status1;		private TextView tv_pay_status2;		private TextView tv_order_num;		private TextView tv_order_status;		private int itemPosition;		private LinearLayout ll_parent;		private ImageView iv_pic;		private TextView tv_title;		private TextView tv_guige;		private TextView tv_price;		private TextView tv_num;	}}